This is how the dialogue system works when the INK File is meant to interact with C# scripts:
==============================================================================================

- Basically the INK file works the same as a keyframe in the animator
- So the INK file can call an event, which in our case is a Function found in the dialogue manager



Basic Outline as to how the INK File can call a function:
===================================================================================================

- The dialogue manager is assigned and "active" INK file, whose data is used to generate dialogue
- But we can add a variable to this INK file, which will act as a container for the function

- So for example the variable is: EXTERNAL EnableShop()
- The dialogue manager assigns the needed function to this variable

- But just like any other variable in a script, it needs to be used for something to happen
- So in the appropriate position, call the variable
- Which in turn will call the function it was assigned



*Important Note*
==================

- The variable's name (just like any other variable) must be consistent when accessing it
- So if the dialogue manager wants to assign something to said variable, the name must be the same


How to use it (25/6/2025)
===========================

- Based on the current dialoguemanager there are 4 functionalities that need to work with an INK File

	1. Selling to an NPC
	2. Buying from an NPC
	3. Quest System
	4. Default (just basic dialogue)



Default:
	- Has no functions that need to be integrated/called by the INK File


Selling/Buying:
	- These 2 work in the same way
	- Both their functions involve disabling the dialogue box and others
	- Then enabling the corresponding shop UI
	
	*Note that each NPC must hold their shop UI locally in their dialogue trigger*

	- The names of the Function variables:
		1. EnableShop
		2. EnablePlayerShop
		
		*These are determined by the dialogueManager for consistency
		*And need to be declared and called in the INK File


Quest System:
	Present in a separate documentation located in the quest script

